{"version":3,"sources":["Components/Hello.js","Components/LinProgWithLabel.js","logo.svg","Components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","useStyles","makeStyles","theme","resultsContainer","justifyContent","resultsText","fontWeight","Results","COVIDFree","confidence","classes","useState","result","setResult","chance","toFixed","useEffect","className","component","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","LinkedinShareButton","title","summary","source","LinkedinIcon","TwitterShareButton","via","hashtags","TwitterIcon","mainContainer","paddingTop","contentContainer","flexDirection","marginTop","input","App","stage","setStage","progress","setProgress","setConfidence","console","log","submitFile","useCallback","e","name","target","files","formData","FormData","append","fetch","method","body","then","res","json","catch","err","alert","timer","setInterval","currProgress","prevProgress","clearInterval","Fragment","class","href","Container","action","enctype","Paper","elevation","id","type","onChange","accept","htmlFor","Button","IconButton","aria-label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd7b31e6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Hello(){\r\n    return <div>\"Hello\"</div>;\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\" width=\"80%\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  LinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  export default LinearProgressWithLabel;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport {\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    TwitterShareButton,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    TwitterIcon,\r\n} from 'react-share';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resultsContainer : {\r\n        width: \"80%\",\r\n        justifyContent: \"center\",\r\n    },\r\n    resultsText: {\r\n        fontWeight: 800\r\n    }\r\n}))\r\n\r\nvar joy = \"Congrats! You are COVIDFree\";\r\nvar death = \"You have COVID YOU WILL DIE\"; \r\nfunction Results({ COVIDFree, confidence }){\r\n    const classes = useStyles();\r\n    const [result, setResult] = useState(\"\");\r\n    const chance = \" with a \" + confidence.toFixed(2) + \"% chance\"; \r\n    useEffect(() => {\r\n        setResult(() => (COVIDFree) && joy || death);\r\n    }, [COVIDFree]);\r\n    \r\n    return (\r\n    <div className={classes.resultsContainer}>\r\n        <Typography className={classes.resultsText} variant=\"h3\" component=\"div\">{result + chance}</Typography> \r\n         {(COVIDFree) && <EmojiEmotionsIcon/>\r\n          || <InsertEmoticonIcon/>}\r\n        <div>\r\n        <FacebookShareButton url=\"facebook.com\" quote={result} hashtag=\"mycovidresults\"><FacebookIcon size={32} round={true}></FacebookIcon></FacebookShareButton>\r\n        <LinkedinShareButton url=\"linkedin.ca\" title={\"My Covid Results\"} summary={\"result\"} source={\"\"}><LinkedinIcon size={32} round={true}></LinkedinIcon></LinkedinShareButton>\r\n        <TwitterShareButton url=\"twitter.com\" title={\"My Covid Results\"} via={\"myself\"} hashtags={[\"mycovidresults\", \"awesome\"]}><TwitterIcon size={32} round={true}></TwitterIcon></TwitterShareButton>\r\n        </div> \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Results;","/**\r\n * Author: Harris Zheng\r\n * Date: November 9th, 2020\r\n * Description: Front-End React App to Display COVID Results.\r\n */\r\n\r\n\r\nimport React, {useEffect, useState, useReducer, useCallback, useMemo} from \"react\";\r\nimport Hello from \"./Components/Hello\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport LinearProgressionWithLabel from \"./Components/LinProgWithLabel\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport logo from './logo.svg';\r\nimport Results from './Components/Results';\r\nimport './styles.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    paddingTop: \"50px\"\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"300px\",\r\n    \"& > #appDiv\" : {\r\n      marginTop: \"10px\"\r\n    } \r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  }\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [stage, setStage] = useState(0); // 0 FOR NO UPLOAD, 1 FOR UPLOAD, 2 FOR RESULT\r\n  const [progress, setProgress] = useState(10); // Progress bar values\r\n  const [confidence, setConfidence] = useState(0);\r\n  const [result, setResult] = useState(\"\");\r\n  \r\n  console.log(result);\r\n  const submitFile = useCallback((e) => { \r\n    /* STAGE 1 */\r\n    setStage(1) \r\n    setProgress(10);\r\n\r\n    let name = e.target.name;\r\n    let value = e.target.files[0];\r\n    let formData = new FormData();\r\n    formData.append(name, value);\r\n    fetch(\"/prediction\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }).then((res) => res.json())\r\n    .then((result) => {\r\n        setResult(result[\"result\"]);\r\n        setConfidence(result[\"confidence\"])\r\n    }).catch((err) => alert(err));\r\n\r\n    const timer = setInterval(() => {\r\n      let currProgress = 0;\r\n      \r\n      setProgress((prevProgress) => { \r\n        if (prevProgress < 100)\r\n          currProgress = prevProgress + 10\r\n        else return prevProgress \r\n        return currProgress\r\n      });\r\n      if (currProgress === 100){ \r\n        setStage(2);\r\n        clearInterval(timer);\r\n      }\r\n    }, 800);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  console.log(result);\r\n  return (\r\n  <React.Fragment>\r\n    <div class=\"header\">\r\n        <a href=\"./SignIn\">Sign In</a>\r\n        <a href=\"./Register\">Register</a>\r\n    </div>\r\n    <Container className={classes.mainContainer}>\r\n        <form action=\"./prediction\" method=\"POST\" enctype=\"multipart/form-data\">\r\n        <Paper elevation={3} className={classes.contentContainer}>\r\n          <Typography component=\"div\" variant=\"h4\" id=\"appDiv\">Submit Your Cough</Typography> \r\n          <div id=\"appDiv\"> \r\n\r\n          {/* We need a for loop to constantly fetch the back end for progress */}\r\n          <input type=\"file\" onChange={submitFile} className={classes.input} name=\"audiofile\" id=\"contained-button-file\" accept=\".wav\"/>\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">Upload Audio</Button>  \r\n          </label>          \r\n          <IconButton color=\"primary\" aria-label=\"upload audiofile\" component=\"span\">\r\n            <AudiotrackIcon />\r\n          </IconButton>\r\n          </div>                    \r\n          { (stage === 1) && <LinearProgressionWithLabel value={progress}/> }   \r\n          { (stage === 2) && <Results COVIDFree={(result === \"positive\") ? false : true} confidence={confidence}/>}\r\n          </Paper>\r\n        </form>\r\n        \r\n    </Container>\r\n\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}